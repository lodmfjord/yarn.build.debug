/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-build-debug",
factory: function (require) {
var plugin=(()=>{var U=Object.create,k=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var L=a=>k(a,"__esModule",{value:!0});var n=a=>{if(typeof require!="undefined")return require(a);throw new Error('Dynamic require of "'+a+'" is not supported')};var S=(a,e)=>{for(var r in e)k(a,r,{get:e[r],enumerable:!0})},I=(a,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of q(e))!D.call(a,t)&&t!=="default"&&k(a,t,{get:()=>e[t],enumerable:!(r=$(e,t))||r.enumerable});return a},p=a=>I(L(k(a!=null?U(A(a)):{},"default",a&&a.__esModule&&"default"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var M={};S(M,{default:()=>K});var T=p(n("@yarnpkg/cli")),N=p(n("@yarnpkg/core")),b=p(n("clipanion"));var C=a=>!0;var d=class{constructor(){this._graphs={}}getTopPackages(){return Object.keys(this._graphs).filter(C).filter(e=>this._graphs[e].length===0)}getAllKeys(){return Object.keys(this._graphs)}getRequired(e){return this._graphs[e]||[]}findCircularDependencies(){let e=r=>{let t=r[r.length-1];return new Set(r).size!==r.length?!0:!!this._graphs[t].find(g=>e([...r,g]))};return Object.keys(this._graphs).filter(C).filter(r=>e([r]))}initNode(e){this._graphs[e]||(this._graphs[e]=[])}addNode(e,r){let t=Array.from(new Set([...this._graphs[e]||[],r]));this._graphs[e]=t}};var u=p(n("@yarnpkg/core"));var O=({padding:a})=>{for(let e=0;e<a;e++)process.stdout.write(`
`)};var P=({graph:a,configuration:e,showCircular:r=!0,showDiagram:t=!0,showTopPackages:o=!0})=>{O({padding:1});let i=(s,c)=>u.formatUtils.pretty(e,s,c),g=a.getTopPackages(),m=a.findCircularDependencies();if(o&&g){let s=u.FormatType.NAME;process.stdout.write("Top packages:"),g.forEach(c=>process.stdout.write(i(`
  ${c}`,s))),process.stdout.write(`
`)}if(r&&m.length){let s=u.FormatType.REMOVED;process.stdout.write("Circular dependencies:"),m.forEach(c=>process.stdout.write(i(`
  ${c}`,s))),process.stdout.write(`
`)}if(t){let s=["digraph G {"],c=l=>{let z=a.getRequired(l);for(let j of z)s.push(`	 "${l}" -> "${j}"`)};for(let l of a.getAllKeys())c(l);s.push("}");let R=Array.from(new Set(s)).join(`
`),W=`https://dreampuf.github.io/GraphvizOnline/#${encodeURIComponent(R)}`;process.stdout.write(W)}};var v=({scope:a,name:e})=>a?`@${a}/${e}`:e;var w=({workspace:a,graph:e})=>{if(!a)return;let r=a.getRecursiveWorkspaceDependencies(),t=v(a.locator);e.initNode(t),r.forEach(o=>{let i=v(o.locator);e.addNode(t,i)})};var f=class extends T.BaseCommand{async execute(){let e=await N.Configuration.find(this.context.cwd,this.context.plugins),{project:r,workspace:t}=await N.Project.find(e,this.context.cwd);if(!t)return 0;let o=new d;return r.topLevelWorkspace.getRecursiveWorkspaceChildren().forEach(m=>{w({workspace:m,graph:o})}),P({graph:o,configuration:e,showDiagram:!1,showCircular:!0,showTopPackages:!0}),0}};f.paths=[["report"]],f.usage=b.Command.Usage({category:"REON commands",description:"Visualizes the build graph of a workspace",details:`
          This command will display the build graph of the current workspace.
        `});var y=f;var E=p(n("@yarnpkg/cli")),x=p(n("@yarnpkg/core")),G=p(n("clipanion"));var h=class extends E.BaseCommand{async execute(){let e=await x.Configuration.find(this.context.cwd,this.context.plugins),{project:r,workspace:t}=await x.Project.find(e,this.context.cwd);if(!t)return 0;let o=new d;return r.topLevelWorkspace.getRecursiveWorkspaceChildren().forEach(m=>{w({workspace:m,graph:o})}),P({graph:o,configuration:e,showDiagram:!0,showCircular:!1,showTopPackages:!1}),0}};h.paths=[["diagram"]],h.usage=G.Command.Usage({category:"REON commands",description:"Report on monorepo.",details:`
          This command will give a basic report on the monorepo, top packages and circular dependencies.
        `});var _=h;var B={commands:[y,_]},K=B;return M;})();
return plugin;
}
};
